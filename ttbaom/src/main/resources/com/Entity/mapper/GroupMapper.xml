<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.Entity.dao.GroupMapper">
  <resultMap id="BaseResultMap" type="com.Entity.Group">
    <constructor>
      <idArg column="groupid" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="group_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="parent_groupid" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="gen_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="description" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    groupid, group_name, parent_groupid, gen_time, description
  </sql>
  <select id="selectByExample" parameterType="com.Entity.GroupExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_group
    where groupid = #{groupid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_group
    where groupid = #{groupid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.Entity.GroupExample">
    delete from t_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.Entity.Group">
    insert into t_group (groupid, group_name, parent_groupid, 
      gen_time, description)
    values (#{groupid,jdbcType=INTEGER}, #{groupName,jdbcType=VARCHAR}, #{parentGroupid,jdbcType=INTEGER}, 
      #{genTime,jdbcType=TIMESTAMP}, #{description,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.Entity.Group">
    insert into t_group
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="groupid != null">
        groupid,
      </if>
      <if test="groupName != null">
        group_name,
      </if>
      <if test="parentGroupid != null">
        parent_groupid,
      </if>
      <if test="genTime != null">
        gen_time,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="groupid != null">
        #{groupid,jdbcType=INTEGER},
      </if>
      <if test="groupName != null">
        #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="parentGroupid != null">
        #{parentGroupid,jdbcType=INTEGER},
      </if>
      <if test="genTime != null">
        #{genTime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.Entity.GroupExample" resultType="java.lang.Long">
    select count(*) from t_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_group
    <set>
      <if test="record.groupid != null">
        groupid = #{record.groupid,jdbcType=INTEGER},
      </if>
      <if test="record.groupName != null">
        group_name = #{record.groupName,jdbcType=VARCHAR},
      </if>
      <if test="record.parentGroupid != null">
        parent_groupid = #{record.parentGroupid,jdbcType=INTEGER},
      </if>
      <if test="record.genTime != null">
        gen_time = #{record.genTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_group
    set groupid = #{record.groupid,jdbcType=INTEGER},
      group_name = #{record.groupName,jdbcType=VARCHAR},
      parent_groupid = #{record.parentGroupid,jdbcType=INTEGER},
      gen_time = #{record.genTime,jdbcType=TIMESTAMP},
      description = #{record.description,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.Entity.Group">
    update t_group
    <set>
      <if test="groupName != null">
        group_name = #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="parentGroupid != null">
        parent_groupid = #{parentGroupid,jdbcType=INTEGER},
      </if>
      <if test="genTime != null">
        gen_time = #{genTime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where groupid = #{groupid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.Entity.Group">
    update t_group
    set group_name = #{groupName,jdbcType=VARCHAR},
      parent_groupid = #{parentGroupid,jdbcType=INTEGER},
      gen_time = #{genTime,jdbcType=TIMESTAMP},
      description = #{description,jdbcType=VARCHAR}
    where groupid = #{groupid,jdbcType=INTEGER}
  </update>
</mapper>